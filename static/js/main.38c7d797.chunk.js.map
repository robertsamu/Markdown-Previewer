{"version":3,"sources":["components/Navbar.js","components/MarkdownPreview.js","components/InputWell.js","components/BackgroundBubbles.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","state","width","changeWindowSize","this","className","title","onClick","React","Component","MarkdownPreview","textarea_width","id","dangerouslySetInnerHTML","__html","marked","value","breaks","InputWell","input_text","active_window","bind","event","setState","target","onChange","handleChange","BackgroundBubbles","window","innerWidth","height","innerHeight","updateWindowDimensions","addEventListener","removeEventListener","min","max","Math","floor","random","top","left","bubble_width","randomIntFromInterval","bubble_height","top_border","right_border","bottom_border","left_border","bubbles","posses","i","bubble_style","getBubbleStyle","overlap","prevent_infin","z","length","push","style","App","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38c7d797.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            width: this.props.width\r\n        }\r\n    }\r\n    render(){\r\n        var changeWindowSize = this.props.changeWindowSize;\r\n        return (\r\n            <div className = \"Navbar\">\r\n                <p>{this.props.title}</p> \r\n                <button className = \"Nav-Button\" onClick={() => changeWindowSize(this.props.title)}><i className=\"fa fa-arrows-alt\" ></i></button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport marked from 'marked';\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass MarkdownPreview extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            textarea_width: '10px'\r\n        }\r\n    }\r\n    render(){\r\n        var changeWindowSize = this.props.changeWindowSize;\r\n        \r\n        return(\r\n            <div id=\"preview-well\">\r\n                <Navbar title = {'Preview'} width = {this.state.textarea_width} changeWindowSize = {changeWindowSize}/>\r\n                <div id=\"preview\">\r\n                    <div dangerouslySetInnerHTML={{__html: marked(this.props.value,{breaks: true})}}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MarkdownPreview;","import React from 'react';\r\nimport MarkdownPreview from \"./MarkdownPreview\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nclass InputWell extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            input_text: \"# Welcome to my React Markdown Previewer!\\n## This is a sub-heading...\\n### And here's some other cool stuff:\\nHeres some code, `<div></div>`, between 2 backticks.You can also make text **bold**... whoa!\\nOr _italic_.\\nOr... wait for it... **_both!_**\\nAnd feel free to go crazy ~~crossing stuff out~~.\",\r\n            textarea_width: '10px',\r\n            active_window: \"both\"\r\n        }\r\n        this.changeWindowSize = this.changeWindowSize.bind(this)\r\n    }\r\n\r\n    handleChange(event){\r\n        //console.log(event)\r\n        this.setState({\r\n            input_text: event.target.value\r\n        })\r\n    }\r\n\r\n    changeWindowSize(props){\r\n        this.setState({\r\n            active_window: (props === this.state.active_window ? \"both\" : props)\r\n        })\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.state.active_window === \"both\")\r\n        return(\r\n            <div className=\"Wells\">\r\n                <div className = \"editor\">\r\n                    <Navbar title = {'Editor'} \r\n                            width = {this.state.textarea_width} \r\n                            changeWindowSize = {this.changeWindowSize.bind(this)}\r\n                    />\r\n                    <textarea id=\"editor\" value = {this.state.input_text} onChange = {this.handleChange.bind(this)}> </textarea>\r\n                </div>\r\n                <MarkdownPreview value = {this.state.input_text} changeWindowSize = {this.changeWindowSize.bind(this)}/>\r\n            </div>\r\n        );\r\n        else if(this.state.active_window === 'Editor') {\r\n            return(\r\n                <div className = \"editor Full\" id=\"editor\">\r\n                    <Navbar title = {'Editor'} \r\n                            width = {this.state.textarea_width} \r\n                            changeWindowSize = {this.changeWindowSize.bind(this)}\r\n                    />\r\n                    <textarea id=\"editor\" value = {this.state.input_text} onChange = {this.handleChange.bind(this)}> </textarea>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return(\r\n            <div className=\"Full\">\r\n                <MarkdownPreview value = {this.state.input_text} changeWindowSize = {this.changeWindowSize.bind(this)}/>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default InputWell;","import React from 'react';\r\n\r\nclass BackgroundBubbles extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { width: window.innerWidth, height: window.innerHeight };\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.updateWindowDimensions();\r\n      window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n      this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    randomIntFromInterval(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n\r\n    getBubbleStyle(){\r\n        let top = Math.floor(Math.random()*this.state.height);\r\n        let left = Math.floor(Math.random()*this.state.width);\r\n        let bubble_width = this.randomIntFromInterval(20, 206) + (this.state.width-300)*0.24;\r\n        let bubble_height = this.randomIntFromInterval(60, 186) + (this.state.width-300)*0.24;\r\n\r\n        while((left + bubble_width) >= this.state.width){\r\n            left = Math.floor(Math.random()*this.state.width-300);\r\n            bubble_width = this.randomIntFromInterval(20, 106) + (this.state.width-300)*0.24;\r\n        } \r\n        \r\n        let top_border = this.randomIntFromInterval(30, 75);\r\n        let right_border = this.randomIntFromInterval(30, 75);\r\n        let bottom_border = this.randomIntFromInterval(30, 75);\r\n        let left_border = this.randomIntFromInterval(30, 75);\r\n\r\n        return (\r\n            {\r\n                \"top\":top,\r\n                \"left\":left,\r\n                \"width\":bubble_width,\r\n                \"height\":bubble_height,\r\n                \"borderRadius\": `${top_border}% ${100-top_border}% ${bottom_border}% ${100-bottom_border}% / ${left_border}% ${right_border}% ${100-right_border}% ${100-left_border}%`\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        let bubbles = [];\r\n        let posses = [];\r\n        for(let i = 0; i<=8-(this.state.width-300)/340; i++)\r\n        {\r\n            let bubble_style = this.getBubbleStyle();\r\n            let overlap = true;\r\n            let prevent_infin = 0;\r\n            \r\n            while(overlap){\r\n                overlap = false;\r\n                for(let z = 0; z<posses.length; z++){\r\n                    overlap = !((bubble_style.left+(bubble_style.width/2)) < (posses[z].left-(posses[z].width/2)) ||\r\n                                (bubble_style.left-(bubble_style.width/2)) > (posses[z].left+(posses[z].width/2)) ||\r\n                                (bubble_style.top+(bubble_style.height/2)) < (posses[z].top-(posses[z].height/2)) ||\r\n                                (bubble_style.top-(bubble_style.height/2)) > (posses[z].top+(posses[z].height/2)));\r\n                    if(overlap)\r\n                        break;\r\n                }\r\n              \r\n                if(overlap) {\r\n                    bubble_style = this.getBubbleStyle();\r\n                }\r\n                prevent_infin++;\r\n                if(prevent_infin>20){break;}\r\n            }\r\n            \r\n            posses.push(bubble_style);\r\n            bubbles.push(<div className=\"background-el\" style={bubble_style} key={bubble_style.left}></div>);\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {bubbles}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BackgroundBubbles;","import './App.scss';\nimport React from 'react';\nimport InputWell from \"./components/InputWell\";\nimport BackgroundBubbles from \"./components/BackgroundBubbles\";\n\nclass App extends React.Component {\n  // constructor(props){\n  //   super(props)\n  // }\n  render(){\n    return (\n    <div>\n      <div id=\"background-elements\">\n        <BackgroundBubbles/>\n        {//<div className=\"background-text-el\"><p>&lt;p&gt;</p></div>\n        }\n      </div>\n\n      <div className=\"App\" type=\"text\">\n        <h1 className = \"header\">HTML Markdown Previewer</h1>\n        \n        <InputWell/>\n      </div>\n    </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}